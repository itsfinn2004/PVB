//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Scripts/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace FistFury.Input
{
    public partial class @InputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Player1"",
            ""id"": ""60cf94e6-7eed-4792-b399-2a645ac5e9a3"",
            ""actions"": [
                {
                    ""name"": ""vertical move"",
                    ""type"": ""Value"",
                    ""id"": ""b47d5e22-4628-460c-a61e-af94929d4297"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.9)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""horizontal move"",
                    ""type"": ""Value"",
                    ""id"": ""61d54691-b7ce-46bc-8971-b828a41e16f0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""duck"",
                    ""type"": ""Button"",
                    ""id"": ""62283047-afa3-4390-86d0-012a3358eb66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.9)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LightPunch"",
                    ""type"": ""Button"",
                    ""id"": ""cc26a589-fda0-416d-b849-c0a08098c94f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MediumPunch"",
                    ""type"": ""Button"",
                    ""id"": ""9952010f-c5c6-47e3-819a-2631aac5b36f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyPunch"",
                    ""type"": ""Button"",
                    ""id"": ""07a49949-f193-466d-ac1b-8af651b3c925"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightKick"",
                    ""type"": ""Button"",
                    ""id"": ""a71ede74-b269-49b3-99ad-1d1d8038bd76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyKick"",
                    ""type"": ""Button"",
                    ""id"": ""5b032ad5-7e4f-4ee6-8fb9-f1be28aedc5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""50a054e3-664d-4b73-af46-1da19a495fee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""41ef24d3-c021-45ff-b2b6-b80d065c5973"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""LightPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85b1c8ea-e69f-4c22-a2c1-ad9e27b45041"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""HeavyPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02e18daf-7c76-4cf7-a156-2fa6fe935d37"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""MediumPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""619bb6b7-8bea-4538-b479-88dc43bcbf2e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""LightKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0091b17-ffac-46ae-87f6-d060f6bea070"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""HeavyKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d157883a-584c-4906-87c6-0fa5bb2ededa"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96b24b50-531c-4e0e-8c51-1a417ce756bd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0a09c17-15b3-415d-b33d-5bd11ecdbda9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""3d43c5e9-26b2-4b87-96f9-dccc95708473"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horizontal move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0f135965-1ac4-4f6c-a0f9-4adbccdb295a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1556051d-f8a3-4d92-a104-7495658caa46"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b3aeaab9-b35f-4439-8d81-8c3e024049a5"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f60796da-a24a-4b5b-8670-e2a9975673cb"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b675aaf2-c2f7-4d6f-af2b-cef9a1b420e3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horizontal move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1fed7705-ce2e-42fc-9ebc-03260da77c2c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player1Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""dee19116-324c-4d37-938d-9b5b2a256065"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme;Controller"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""38e11bfe-dd91-42b3-8fea-de165dbc0544"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""vertical move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""614b599a-4eac-4543-a86c-0b2f40b31445"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""vertical move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3f6901d-989a-43e6-8aa2-d879c05c1d2d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""duck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8062bda8-0a78-446b-9993-a1ce527fe000"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player1Scheme"",
                    ""action"": ""duck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2"",
            ""id"": ""c7f89b6e-08db-4387-b9d0-96661dfecfe3"",
            ""actions"": [
                {
                    ""name"": ""horizontal move"",
                    ""type"": ""Value"",
                    ""id"": ""2b0a7d49-9e60-47df-b268-2a38910ae9b9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""vertical move"",
                    ""type"": ""Button"",
                    ""id"": ""81c3d3ad-203b-4830-bb6d-ded8b1519f70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.9)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""duck"",
                    ""type"": ""Button"",
                    ""id"": ""32d9b8bc-2cd8-4fa7-9482-887c225d32ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.9)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""6ccfd18e-b819-419a-9477-085d412f72a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyKick"",
                    ""type"": ""Button"",
                    ""id"": ""b71aa81b-734b-4b61-8e28-ff02c5675211"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightKick"",
                    ""type"": ""Button"",
                    ""id"": ""6fbb0bac-8d71-41bc-9972-051a0715beda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyPunch"",
                    ""type"": ""Button"",
                    ""id"": ""9dd8830c-58ad-45e9-b1e1-a914c37d45ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MediumPunch"",
                    ""type"": ""Button"",
                    ""id"": ""ab5162b0-45a6-4f84-aac5-6b74288b9f93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightPunch"",
                    ""type"": ""Button"",
                    ""id"": ""78587c38-d322-4ef7-9576-2705fb364b88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""69f22c2d-52e2-468b-9e1e-9670f159856b"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""LightPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff858578-6c2f-42b3-8cfd-aaf8e90df5b4"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""MediumPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68cccd3d-4394-4377-9c23-4b069e72b28d"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""HeavyPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b0aecf2-dc64-4222-97ab-c35c5adfbd78"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""LightKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c874114f-1d02-4d21-8f94-3d429f5362da"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""HeavyKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f982e84-91d4-41ed-89b9-26519ce7d430"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6ed5573-df17-4704-b97b-d96bde888d74"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07b55efb-0dff-4d43-a151-572449f41eb5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""45bc56d4-fd79-4e5a-8f47-52b51163f6f4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horizontal move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e1bb6f9f-52b0-447a-9f53-074f59786d2d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ab99c887-6186-41bb-b033-60d6d97d69b3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""978ee6b5-5547-4572-a6d2-93550841e1a4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db03a420-5d63-4180-94c5-6b0bfd017345"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""3fc4fa40-e0f5-4256-9f0d-648867c4554c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""horizontal move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""73b471a2-2364-4996-b55a-7da0290d560b"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""787ca891-5a07-46ad-973a-de7b6fecf69d"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player2Scheme"",
                    ""action"": ""horizontal move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9e2b53b9-d1be-4d71-93cc-fd7d848b356b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""duck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79a9cf2b-b439-4547-976e-5c2364b031aa"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player2Scheme"",
                    ""action"": ""duck"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e704418d-db5e-403f-888c-f8b432bec829"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player2Scheme"",
                    ""action"": ""vertical move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""060dfc33-36bd-46ac-85c4-56034a29f92b"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller;Player2Scheme"",
                    ""action"": ""vertical move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Player1Scheme"",
            ""bindingGroup"": ""Player1Scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Player2Scheme"",
            ""bindingGroup"": ""Player2Scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Player1
            m_Player1 = asset.FindActionMap("Player1", throwIfNotFound: true);
            m_Player1_verticalmove = m_Player1.FindAction("vertical move", throwIfNotFound: true);
            m_Player1_horizontalmove = m_Player1.FindAction("horizontal move", throwIfNotFound: true);
            m_Player1_duck = m_Player1.FindAction("duck", throwIfNotFound: true);
            m_Player1_LightPunch = m_Player1.FindAction("LightPunch", throwIfNotFound: true);
            m_Player1_MediumPunch = m_Player1.FindAction("MediumPunch", throwIfNotFound: true);
            m_Player1_HeavyPunch = m_Player1.FindAction("HeavyPunch", throwIfNotFound: true);
            m_Player1_LightKick = m_Player1.FindAction("LightKick", throwIfNotFound: true);
            m_Player1_HeavyKick = m_Player1.FindAction("HeavyKick", throwIfNotFound: true);
            m_Player1_Block = m_Player1.FindAction("Block", throwIfNotFound: true);
            // Player2
            m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
            m_Player2_horizontalmove = m_Player2.FindAction("horizontal move", throwIfNotFound: true);
            m_Player2_verticalmove = m_Player2.FindAction("vertical move", throwIfNotFound: true);
            m_Player2_duck = m_Player2.FindAction("duck", throwIfNotFound: true);
            m_Player2_Block = m_Player2.FindAction("Block", throwIfNotFound: true);
            m_Player2_HeavyKick = m_Player2.FindAction("HeavyKick", throwIfNotFound: true);
            m_Player2_LightKick = m_Player2.FindAction("LightKick", throwIfNotFound: true);
            m_Player2_HeavyPunch = m_Player2.FindAction("HeavyPunch", throwIfNotFound: true);
            m_Player2_MediumPunch = m_Player2.FindAction("MediumPunch", throwIfNotFound: true);
            m_Player2_LightPunch = m_Player2.FindAction("LightPunch", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player1
        private readonly InputActionMap m_Player1;
        private List<IPlayer1Actions> m_Player1ActionsCallbackInterfaces = new List<IPlayer1Actions>();
        private readonly InputAction m_Player1_verticalmove;
        private readonly InputAction m_Player1_horizontalmove;
        private readonly InputAction m_Player1_duck;
        private readonly InputAction m_Player1_LightPunch;
        private readonly InputAction m_Player1_MediumPunch;
        private readonly InputAction m_Player1_HeavyPunch;
        private readonly InputAction m_Player1_LightKick;
        private readonly InputAction m_Player1_HeavyKick;
        private readonly InputAction m_Player1_Block;
        public struct Player1Actions
        {
            private @InputActions m_Wrapper;
            public Player1Actions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @verticalmove => m_Wrapper.m_Player1_verticalmove;
            public InputAction @horizontalmove => m_Wrapper.m_Player1_horizontalmove;
            public InputAction @duck => m_Wrapper.m_Player1_duck;
            public InputAction @LightPunch => m_Wrapper.m_Player1_LightPunch;
            public InputAction @MediumPunch => m_Wrapper.m_Player1_MediumPunch;
            public InputAction @HeavyPunch => m_Wrapper.m_Player1_HeavyPunch;
            public InputAction @LightKick => m_Wrapper.m_Player1_LightKick;
            public InputAction @HeavyKick => m_Wrapper.m_Player1_HeavyKick;
            public InputAction @Block => m_Wrapper.m_Player1_Block;
            public InputActionMap Get() { return m_Wrapper.m_Player1; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Player1Actions set) { return set.Get(); }
            public void AddCallbacks(IPlayer1Actions instance)
            {
                if (instance == null || m_Wrapper.m_Player1ActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_Player1ActionsCallbackInterfaces.Add(instance);
                @verticalmove.started += instance.OnVerticalmove;
                @verticalmove.performed += instance.OnVerticalmove;
                @verticalmove.canceled += instance.OnVerticalmove;
                @horizontalmove.started += instance.OnHorizontalmove;
                @horizontalmove.performed += instance.OnHorizontalmove;
                @horizontalmove.canceled += instance.OnHorizontalmove;
                @duck.started += instance.OnDuck;
                @duck.performed += instance.OnDuck;
                @duck.canceled += instance.OnDuck;
                @LightPunch.started += instance.OnLightPunch;
                @LightPunch.performed += instance.OnLightPunch;
                @LightPunch.canceled += instance.OnLightPunch;
                @MediumPunch.started += instance.OnMediumPunch;
                @MediumPunch.performed += instance.OnMediumPunch;
                @MediumPunch.canceled += instance.OnMediumPunch;
                @HeavyPunch.started += instance.OnHeavyPunch;
                @HeavyPunch.performed += instance.OnHeavyPunch;
                @HeavyPunch.canceled += instance.OnHeavyPunch;
                @LightKick.started += instance.OnLightKick;
                @LightKick.performed += instance.OnLightKick;
                @LightKick.canceled += instance.OnLightKick;
                @HeavyKick.started += instance.OnHeavyKick;
                @HeavyKick.performed += instance.OnHeavyKick;
                @HeavyKick.canceled += instance.OnHeavyKick;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
            }

            private void UnregisterCallbacks(IPlayer1Actions instance)
            {
                @verticalmove.started -= instance.OnVerticalmove;
                @verticalmove.performed -= instance.OnVerticalmove;
                @verticalmove.canceled -= instance.OnVerticalmove;
                @horizontalmove.started -= instance.OnHorizontalmove;
                @horizontalmove.performed -= instance.OnHorizontalmove;
                @horizontalmove.canceled -= instance.OnHorizontalmove;
                @duck.started -= instance.OnDuck;
                @duck.performed -= instance.OnDuck;
                @duck.canceled -= instance.OnDuck;
                @LightPunch.started -= instance.OnLightPunch;
                @LightPunch.performed -= instance.OnLightPunch;
                @LightPunch.canceled -= instance.OnLightPunch;
                @MediumPunch.started -= instance.OnMediumPunch;
                @MediumPunch.performed -= instance.OnMediumPunch;
                @MediumPunch.canceled -= instance.OnMediumPunch;
                @HeavyPunch.started -= instance.OnHeavyPunch;
                @HeavyPunch.performed -= instance.OnHeavyPunch;
                @HeavyPunch.canceled -= instance.OnHeavyPunch;
                @LightKick.started -= instance.OnLightKick;
                @LightKick.performed -= instance.OnLightKick;
                @LightKick.canceled -= instance.OnLightKick;
                @HeavyKick.started -= instance.OnHeavyKick;
                @HeavyKick.performed -= instance.OnHeavyKick;
                @HeavyKick.canceled -= instance.OnHeavyKick;
                @Block.started -= instance.OnBlock;
                @Block.performed -= instance.OnBlock;
                @Block.canceled -= instance.OnBlock;
            }

            public void RemoveCallbacks(IPlayer1Actions instance)
            {
                if (m_Wrapper.m_Player1ActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayer1Actions instance)
            {
                foreach (var item in m_Wrapper.m_Player1ActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_Player1ActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public Player1Actions @Player1 => new Player1Actions(this);

        // Player2
        private readonly InputActionMap m_Player2;
        private List<IPlayer2Actions> m_Player2ActionsCallbackInterfaces = new List<IPlayer2Actions>();
        private readonly InputAction m_Player2_horizontalmove;
        private readonly InputAction m_Player2_verticalmove;
        private readonly InputAction m_Player2_duck;
        private readonly InputAction m_Player2_Block;
        private readonly InputAction m_Player2_HeavyKick;
        private readonly InputAction m_Player2_LightKick;
        private readonly InputAction m_Player2_HeavyPunch;
        private readonly InputAction m_Player2_MediumPunch;
        private readonly InputAction m_Player2_LightPunch;
        public struct Player2Actions
        {
            private @InputActions m_Wrapper;
            public Player2Actions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @horizontalmove => m_Wrapper.m_Player2_horizontalmove;
            public InputAction @verticalmove => m_Wrapper.m_Player2_verticalmove;
            public InputAction @duck => m_Wrapper.m_Player2_duck;
            public InputAction @Block => m_Wrapper.m_Player2_Block;
            public InputAction @HeavyKick => m_Wrapper.m_Player2_HeavyKick;
            public InputAction @LightKick => m_Wrapper.m_Player2_LightKick;
            public InputAction @HeavyPunch => m_Wrapper.m_Player2_HeavyPunch;
            public InputAction @MediumPunch => m_Wrapper.m_Player2_MediumPunch;
            public InputAction @LightPunch => m_Wrapper.m_Player2_LightPunch;
            public InputActionMap Get() { return m_Wrapper.m_Player2; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
            public void AddCallbacks(IPlayer2Actions instance)
            {
                if (instance == null || m_Wrapper.m_Player2ActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_Player2ActionsCallbackInterfaces.Add(instance);
                @horizontalmove.started += instance.OnHorizontalmove;
                @horizontalmove.performed += instance.OnHorizontalmove;
                @horizontalmove.canceled += instance.OnHorizontalmove;
                @verticalmove.started += instance.OnVerticalmove;
                @verticalmove.performed += instance.OnVerticalmove;
                @verticalmove.canceled += instance.OnVerticalmove;
                @duck.started += instance.OnDuck;
                @duck.performed += instance.OnDuck;
                @duck.canceled += instance.OnDuck;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
                @HeavyKick.started += instance.OnHeavyKick;
                @HeavyKick.performed += instance.OnHeavyKick;
                @HeavyKick.canceled += instance.OnHeavyKick;
                @LightKick.started += instance.OnLightKick;
                @LightKick.performed += instance.OnLightKick;
                @LightKick.canceled += instance.OnLightKick;
                @HeavyPunch.started += instance.OnHeavyPunch;
                @HeavyPunch.performed += instance.OnHeavyPunch;
                @HeavyPunch.canceled += instance.OnHeavyPunch;
                @MediumPunch.started += instance.OnMediumPunch;
                @MediumPunch.performed += instance.OnMediumPunch;
                @MediumPunch.canceled += instance.OnMediumPunch;
                @LightPunch.started += instance.OnLightPunch;
                @LightPunch.performed += instance.OnLightPunch;
                @LightPunch.canceled += instance.OnLightPunch;
            }

            private void UnregisterCallbacks(IPlayer2Actions instance)
            {
                @horizontalmove.started -= instance.OnHorizontalmove;
                @horizontalmove.performed -= instance.OnHorizontalmove;
                @horizontalmove.canceled -= instance.OnHorizontalmove;
                @verticalmove.started -= instance.OnVerticalmove;
                @verticalmove.performed -= instance.OnVerticalmove;
                @verticalmove.canceled -= instance.OnVerticalmove;
                @duck.started -= instance.OnDuck;
                @duck.performed -= instance.OnDuck;
                @duck.canceled -= instance.OnDuck;
                @Block.started -= instance.OnBlock;
                @Block.performed -= instance.OnBlock;
                @Block.canceled -= instance.OnBlock;
                @HeavyKick.started -= instance.OnHeavyKick;
                @HeavyKick.performed -= instance.OnHeavyKick;
                @HeavyKick.canceled -= instance.OnHeavyKick;
                @LightKick.started -= instance.OnLightKick;
                @LightKick.performed -= instance.OnLightKick;
                @LightKick.canceled -= instance.OnLightKick;
                @HeavyPunch.started -= instance.OnHeavyPunch;
                @HeavyPunch.performed -= instance.OnHeavyPunch;
                @HeavyPunch.canceled -= instance.OnHeavyPunch;
                @MediumPunch.started -= instance.OnMediumPunch;
                @MediumPunch.performed -= instance.OnMediumPunch;
                @MediumPunch.canceled -= instance.OnMediumPunch;
                @LightPunch.started -= instance.OnLightPunch;
                @LightPunch.performed -= instance.OnLightPunch;
                @LightPunch.canceled -= instance.OnLightPunch;
            }

            public void RemoveCallbacks(IPlayer2Actions instance)
            {
                if (m_Wrapper.m_Player2ActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayer2Actions instance)
            {
                foreach (var item in m_Wrapper.m_Player2ActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_Player2ActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public Player2Actions @Player2 => new Player2Actions(this);
        private int m_Player1SchemeSchemeIndex = -1;
        public InputControlScheme Player1SchemeScheme
        {
            get
            {
                if (m_Player1SchemeSchemeIndex == -1) m_Player1SchemeSchemeIndex = asset.FindControlSchemeIndex("Player1Scheme");
                return asset.controlSchemes[m_Player1SchemeSchemeIndex];
            }
        }
        private int m_ControllerSchemeIndex = -1;
        public InputControlScheme ControllerScheme
        {
            get
            {
                if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
                return asset.controlSchemes[m_ControllerSchemeIndex];
            }
        }
        private int m_Player2SchemeSchemeIndex = -1;
        public InputControlScheme Player2SchemeScheme
        {
            get
            {
                if (m_Player2SchemeSchemeIndex == -1) m_Player2SchemeSchemeIndex = asset.FindControlSchemeIndex("Player2Scheme");
                return asset.controlSchemes[m_Player2SchemeSchemeIndex];
            }
        }
        public interface IPlayer1Actions
        {
            void OnVerticalmove(InputAction.CallbackContext context);
            void OnHorizontalmove(InputAction.CallbackContext context);
            void OnDuck(InputAction.CallbackContext context);
            void OnLightPunch(InputAction.CallbackContext context);
            void OnMediumPunch(InputAction.CallbackContext context);
            void OnHeavyPunch(InputAction.CallbackContext context);
            void OnLightKick(InputAction.CallbackContext context);
            void OnHeavyKick(InputAction.CallbackContext context);
            void OnBlock(InputAction.CallbackContext context);
        }
        public interface IPlayer2Actions
        {
            void OnHorizontalmove(InputAction.CallbackContext context);
            void OnVerticalmove(InputAction.CallbackContext context);
            void OnDuck(InputAction.CallbackContext context);
            void OnBlock(InputAction.CallbackContext context);
            void OnHeavyKick(InputAction.CallbackContext context);
            void OnLightKick(InputAction.CallbackContext context);
            void OnHeavyPunch(InputAction.CallbackContext context);
            void OnMediumPunch(InputAction.CallbackContext context);
            void OnLightPunch(InputAction.CallbackContext context);
        }
    }
}
